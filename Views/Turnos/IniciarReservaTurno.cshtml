@model AgendaDelConsultorio.Models.ReservaTurno

@{
    ViewData["Title"] = "Reserva de Turnos";
}

<h1>@ViewData["Title"]</h1>

<style>
    .container {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
    }

    .calendar-container {
        flex: 0 0 50%; /* Ocupa el 70% del espacio */
    }

    .dropdown-container {
        flex: 1; /* Ocupa el espacio restante */
        padding-left: 20px; /* Espacio entre el calendario y la lista desplegable */
    }

    .oculto {
        display: none;
    }
</style>
<script>
    function siguientePaso(pasoActual, pasoSiguiente) {
        document.getElementById(pasoActual).classList.add('oculto');
    document.getElementById(pasoSiguiente).classList.remove('oculto');
                         }

    function anteriorPaso(pasoActual, pasoAnterior) {
        document.getElementById(pasoActual).classList.add('oculto');
        document.getElementById(pasoAnterior).classList.remove('oculto')
    }

</script>
<div class="container-reserva-turno">
    <form asp-action="ReservarTurno">
        <input asp-for="PacienteId" type="hidden" />
        <input asp-for="Paciente" type="hidden" />
        <input type="hidden" asp-for="Paciente.PacienteId" />
        <input type="hidden" asp-for="Paciente.LocalidadId" />
        <input type="hidden" asp-for="Paciente.ProvinciaId" />
        <input type="hidden" asp-for="Paciente.Apellido" />
        <input type="hidden" asp-for="Paciente.Nombre" />
        <input type="hidden" asp-for="Paciente.CorreoElectronico" />
        <input type="hidden" asp-for="Paciente.NumeroDocumento" />

        <div class="paso" id="paso1">
            <h4>Paso 1: Formulario de contacto</h4>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Paciente.Apellido)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Paciente.Apellido)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Paciente.Nombre)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Paciente.Nombre)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Paciente.FechaNacimiento)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Paciente.FechaNacimiento)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Paciente.TipoDocumento)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Paciente.TipoDocumento)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Paciente.NumeroDocumento)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Paciente.NumeroDocumento)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Paciente.Calle)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Paciente.Calle)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Paciente.Altura)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Paciente.Altura)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Paciente.CodigoPostal)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Paciente.CodigoPostal)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Paciente.CorreoElectronico)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Paciente.CorreoElectronico)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Paciente.Telefono)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Paciente.Telefono)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Paciente.Localidad)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Paciente.Localidad.Descripcion)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Paciente.Provincia)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Paciente.Provincia.Descripcion)
                </dd>
            </dl>
            <button type="button" onclick="siguientePaso(`paso1`, `paso2`);">Siguente</button>
        </div>

        <br />
        <hr />
        <br />

        <div class="paso oculto" id="paso2">
            <h4>Paso 2: Selección de la Especialidad</h4>
            <dl class="row">
                <dt class="col-sm-2">
                    <label asp-for="TipoEspecialidadId" class="control-label"></label>
                </dt>
                <dd class="col-sm-10">
                    <select asp-for="TipoEspecialidadId" class="form-control" asp-items="ViewBag.SelectListTiposEspecialidades" id="SelectTiposEspecialidad" name="TipoEspecialidadId"></select>
                </dd>
                <dt class="col-sm-2">
                    <label asp-for="EspecialidadId" class="control-label"></label>
                </dt>
                <dd class="col-sm-10">
                    <select asp-for="EspecialidadId" class="form-control" asp-items="ViewBag.SelectListEspecialidades" id="SelectEspecialidad" name="EspecialidadId"></select>
                </dd>
                <dt class="col-sm-2">
                    <label asp-for="Observacion" class="control-label"></label>
                </dt>
                <dd class="col-sm-10">
                    <input asp-for="Observacion" class="form-control" />
                    <span asp-validation-for="Observacion" class="text-danger"></span>
                </dd>
            </dl>

            <br />
            <button type="button" onclick="siguientePaso('paso2', 'paso3')">Siguiente</button>
            <button type="button" onclick="anteriorPaso('paso2', 'paso1')">Anterior</button>
        </div>

        <br />
        <hr />
        <br />

        <div class="paso oculto" id="paso3">
            <h2>Paso 3: Selección de Fecha y Hora</h2>

            <div class="calendar-container">
                <div id="calendar"></div>
            </div>

            <div class="dropdown-container">

                <dl class="row">
                    <dt class="col-sm-3">
                        <label asp-for="FechaTurno" class="control-label"></label>
                    </dt>
                    <dd class="col-sm-10">
                        <select asp-for="FechaTurno" class="form-control" asp-items="ViewBag.SelectListFechas" id="SelectFechas"></select>
                    </dd>
                    <dt class="col-sm-3">
                        <label asp-for="HoraTurno" class="control-label"></label>
                    </dt>
                    <dd class="col-sm-10">
                        <select asp-for="HoraTurno" class="form-control" asp-items="ViewBag.SelectListHoras" id="SelectHoras"></select>
                    </dd>
                </dl>
            </div>
            <button type="button" onclick="siguientePaso('paso3', 'paso4')">Siguiente</button>
            <button type="button" onclick="anteriorPaso('paso3', 'paso2')">Anterior</button>
        </div>


        <br />
        <hr />
        <br />

        <div class="paso oculto" id="paso4">
            <h3>Paso 4: Confirmar los datos ingresados</h3>

            <fieldset class="mb-4">
                <legend>Datos de Contacto</legend>
                <dl class="row">
                    <dt class="col-sm-2">
                        @Model.Paciente.Apellido
                    </dt>
                    <dd class="col-sm-10">
                        @Model.Paciente.Apellido
                    </dd>

                    <dt class="col-sm-2">
                        @Model.Paciente.Nombre
                    </dt>
                    <dd class="col-sm-10">
                        @Model.Paciente.Nombre
                    </dd>

                    <dt class="col-sm-2">
                        Fecha de nacimiento
                    </dt>
                    <dd class="col-sm-10">
                        @Model.Paciente.FechaNacimiento?.ToString("d")
                    </dd>

                    <dt class="col-sm-2">
                        Tipo documento
                    </dt>
                    <dd class="col-sm-10">
                        @Model.Paciente.TipoDocumento
                    </dd>

                    <dt class="col-sm-2">
                        Número documento
                    </dt>
                    <dd class="col-sm-10">
                        @Model.Paciente.NumeroDocumento
                    </dd>

                    <dt class="col-sm-2">
                        Correo Electrónico
                    </dt>
                    <dd class="col-sm-10">
                        @Model.Paciente.CorreoElectronico
                    </dd>
                </dl>
            </fieldset>

            <fieldset class="mb-4">
                <legend>Datos de Tipo de Servicio y Servicio</legend>
                <dl class="row">
                    <dt class="col-sm-2">
                        <label asp-for="TipoEspecialidadDescripcion"></label>
                    </dt>
                    <dd class="col-sm-10">
                        <input asp-for="TipoEspecialidadDescripcion" class="form-control" id="TipoEspecialidadDescripcion" type="text" readonly />
                    </dd>
                    <dt class="col-sm-2">
                        <label asp-for="EspecialidadDescripcion"></label>
                    </dt>
                    <dd class="col-sm-10">
                        <input asp-for="EspecialidadDescripcion" class="form-control" id="EspecialidadDescripcion" type="text" readonly />
                    </dd>
                </dl>
            </fieldset>

            <fieldset class="mb-4">
                <legend>Datos de Fecha y Hora</legend>
                <dl class="row">
                    <dt class="col-sm-2">
                        <label asp-for="FechaTurno" class="control-label"></label>
                    </dt>
                    <dd class="col-sm-10">
                        <input asp-for="FechaTurno" class="form-control" id="FechaTurno" type="text" readonly />
                    </dd>
                    <dt class="col-sm-2">
                        <label asp-for="HoraTurno" class="control-label"></label>
                    </dt>
                    <dd class="col-sm-10">
                        <input asp-for="HoraTurno" class="form-control" id="HoraTurno" type="time" readonly />
                    </dd>
                </dl>
            </fieldset>

            <input type="submit" value="Reservar turno" />

            <button type="button" onclick="anteriorPaso(`paso4`, `paso3`)">Anterior</button>
        </div>

        <br /> <hr /> <br />
    </form>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<style>
    #calendar {
        height: 500px;
        width: 550px;
    }
</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/fullcalendar/dist/index.global.min.js"></script>
<script src="~/fullcalendar/packages/core/locales/es.global.min.js"></script>

<script>
    let fechasDisponibles = [];

    // Obtener las fechas antes de inicializar el calendario
    $.ajax({
        async: false,  // Esto hará que la petición sea síncrona
        url: '/Turnos/ObtenerJsonDeFechasDisponiblesFormateadasYYYYMMDDProximos60Dias',
        data: {
            año: new Date().getFullYear(),
            mes: new Date().getMonth() + 1,
            dia: new Date().getDate()
        },
        success: function (data) {
            fechasDisponibles = data;
        }
    });

    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');

        var calendar = new FullCalendar.Calendar(calendarEl, {
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth'
            },
            aspectRatio: 0.5,
            locale: 'es',
            initialView: 'dayGridMonth',
            selectable: true,
            select: function (info) {
                //alert(info.startStr);
            },
            dayCellDidMount: function (cellInfo) {

                let fecha = cellInfo.date.toISOString().substring(0, 10);
                if (fechasDisponibles.includes(fecha)) {
                    cellInfo.el.style.backgroundColor = '#8fdf82';
                }
            },
            dateClick: function (info) {
                let fecha = info.date.toISOString().substring(0, 10);

                if (fechasDisponibles.includes(fecha)) {
                    var partes = fecha.split('-');
                    var fechaFormateada = partes[2] + '/' + partes[1] + '/' + partes[0];
                    $('#SelectFechas').val(fechaFormateada).change();
                }
            }
        });

        calendar.render();
    });
</script>



<script>
    $(document).ready(function () {
        $('#SelectTiposEspecialidad').change(cambiarTipoEspecialidad);
        $('#SelectEspecialidad').change(cambiarEspecialidad);
        $('#SelectFechas').change(cambiarFecha);
        $('#SelectHoras').change(cambiarHora);

        // Actualizar al cargar la página
        actualizarDescripcion('#SelectTiposEspecialidad', '#TipoEspecialidadDescripcion');
        actualizarDescripcion('#SelectEspecialidad', '#EspecialidadDescripcion');
    });

    function actualizarDescripcion(selectorDropdown, idCampoTexto) {
        var textoSeleccionado = $(selectorDropdown + " option").filter(":selected").text();
        $(idCampoTexto).val(textoSeleccionado);
    }


    function cambiarTipoEspecialidad() {
        var tipoEspecialidadId = $(this).val();
        obtenerEspecialidadPorTipo(tipoEspecialidadId);

        actualizarDescripcion('#SelectTiposEspecialidad', '#TipoEspecialidadDescripcion');
    }

    function cambiarEspecialidad() {
        var especialidadId = $(this).val();
        actualizarDescripcion('#SelectEspecialidad', '#EspecialidadDescripcion');
    }

    function cambiarFecha() {
        var fechaSeleccionada = $(this).val();
        $('#FechaTurno').val(fechaSeleccionada);

        obtenerHorasLibres(fechaSeleccionada);
    }

    function cambiarHora() {
        var horaSeleccionada = $(this).val();
        $('#HoraTurno').val(horaSeleccionada);
    }

    function obtenerEspecialidadPorTipo(tipoEspecialidadId) {
        $.getJSON('/Turnos/ObtenerJsonEspecialidadPorTipoEspecialidad', { tipoEspecialidadId: tipoEspecialidadId }, function (data) {
            var especialidadesDropdown = $('#SelectEspecialidad');
            especialidadesDropdown.empty();

            $.each(data, function (index, item) {
                especialidadesDropdown.append($('<option>', {
                    value: item.especialidadId,
                    text: item.descripcion,
                    selected: index === 0 // Si es el primer elemento, establece selected en true
                }));
            });
            $('#SelectEspecialidad').trigger('change');
        });
    }

    function obtenerHorasLibres(fechaSeleccionada) {
        $.getJSON('/Turnos/ObtenerHorasDisponiblesDeTurnosFormateadasPorFecha', { fecha: fechaSeleccionada }, function (data) {
            var horasDropdown = $('#SelectHoras');
            horasDropdown.empty();
            $.each(data, function (index, hora) {
                horasDropdown.append($('<option>', {
                    value: hora,
                    text: hora
                }));
            });
            $('#SelectHoras').trigger('change');
        });
    }

</script>